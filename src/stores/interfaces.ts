
export interface GiftCard {
    imageUri:      string;
    imgType:      string;
    imgName:      string;
    cardTitle:    string;
    cardCountry:  string;
    cardValue:    number;
    cardCode:     string;
    cardType:     string;
    startingCode: string;
    cardRate:   number;
    isChecked:   boolean;
  }
  
  export interface activeAddTrade {
    giftCards: GiftCard[];
    activeGiftCard:number|null;
    tradeTitle:string;
    tradeIcon:string;
    totalCardValue:number;
    totalTransactionValue:number;
  }
  
  
  export interface AddTradeState {
    giftCards: GiftCard[];
    activeGiftCard:number|null;
    tradeTitle:string;
    tradeIcon:string;
    codes: number[],
    setCodes: (payload: number[]) => void;
    totalCardValue:number;
    totalTransactionValue:number;
    setGiftCards: (payload: GiftCard[]) => void;
    setActiveGiftCard: (payload: number) => void;
    setTradeTitle: (payload: string) => void;
  }

  




  
export interface Card {
    cardName: string;
    cardIcon: string;
    disabled: boolean;
  }
  
  export interface CardState {
    cards: Card[];
    card: Card[];
    tradeData: any; 
    disableStatus: any; 
    cardIDdata: any;
    codes: number[]; 
    getcodes: any;
    delete_all_giftcards: any;
    delete_admin_card: any;
    list: any; 
    our_rate: any;
    setCards: (payload: Card[]) => void;
    addCard: (payload: Card) => void;
    setTradeData: (payload: any) => void;
    setDisableStatus: (payload: any) => void;
    setCardIDData: (payload: any) => void;
    setCodes: (payload: any) => void;
    setGetCodes: (payload: any) => void;
    setDeleteAllGiftCards: (payload: any) => void;
    setDeleteAdminCard: (payload: any) => void;
    setList: (payload: any) => void;
    setOurRate: (payload: any) => void;
  }




  export interface NewsItem {
    url: string;
    image: string;
  }
  
  export interface NewsStore {
    news: NewsItem[];
    setNews: (payload: NewsItem[]) => void;
  }



  // Home Data Store
  export interface HomeData {
    toprates: TopRate[];
    wallet: Wallet;
  }
  
  export interface TopRate {
    cardName: string;
    cardValue: number;
    cardRate: number;
  }
  
  export interface Wallet {
    cashBalance: number;
    airtimeBalance: number;
  }
  
  export interface HomeStore {
    toprates: TopRate[];
    wallet: Wallet;
    setHomeData: (payload: HomeData | null) => void;
  }



  export interface User {
    _id: string;
    email: string;
    username: string;
    phone: string;
    role: string;
    isVerified: boolean;
    isDeleted: boolean;
    fullName: any;
    status: string;
  }
  
  export interface BankDetail {
    accountNumber: string;
    accountTitle: string;
    bankName: string;
    bankCode: string;
  }
  
  export interface AuthStore {
    user: User | null;
    bankDetail: BankDetail | null;
    setUsers: (payload: User | null) => void;
    setBankDetail: (payload: BankDetail | null) => void;
  }
  



export interface TradeGiftCard {
  _id:          string;
  cardTitle:    string;
  cardCountry:  string;
  cardType:     string;
  cardValue:    number;
  cardImage:    string;
  startingCode: string;
  cardCode:     string;
  cardRate:     number;
  createdAt:    string;
  transactionValue?: number;
  status?:       string;
  declineReasonImage?: string;
  declineReason?: string;
}


export interface Trade {
  user:                  string;
  moderator:             string | null;
  tradeId:               string;
  tradeTitle:            string;
  tradeIcon:             string;
  moderatorStatus:       string;
  tradeStatus:           string;
  totalCardValue:        number;
  totalTransactionValue: number;
  createdAt:             string;
  giftCards:            TradeGiftCard[];
}


export interface TradesData {
  trades:Trade[];
  totalPages:  number;
  currentPage: number;
  totalItems:  number;
}

export interface TradesStore {
  detailTrades:Trade | null;
  pendingTotalItems:  number;
  completedTotalItems:  number;
  ongoingTotalItems:  number;
  setDetailTrades: (payload: Trade) => void;
  setPendingTotalItems: (payload:number) => void;
  setCompletedTotalItems: (payload:number) => void;
  setOngoingTotalItems: (payload:number) => void;
}


// Generated by https://quicktype.io

export interface Settings {
  btcRate:               BtcRate;
  admin:                 string;
  allowBitcoinTrading:   boolean;
  allowGiftcardTrading:  boolean;
  allowRegistration:     boolean;
  allowUsdtTrading:      boolean;
  allowWithdrawal:       boolean;
  autoWithdrawal:        boolean;
  dstvGotvFee:           number;
  maxWithdrawal:         number;
  minWithdrawal:         number;
  paystackFee:           number;
  withdrawalFee:         number;
  withdrawalReviewLimit: number;
}

export interface BtcRate {
  rate1: number;
  rate2: number;
  rate3: number;
}

export interface SettingsStore {
  settings: Settings | null;
  setSettings: (payload: Settings | null) => void;
}
